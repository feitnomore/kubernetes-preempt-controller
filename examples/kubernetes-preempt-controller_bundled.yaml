apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kubernetes-preempt-controller
  name: kubernetes-preempt-controller
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1 
metadata:
  name: kubernetes-preempt-controller 
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["patch", "get", "watch", "list", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-preempt-controller
  labels:
    k8s-app: kubernetes-preempt-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-preempt-controller 
subjects:
- kind: ServiceAccount
  name: kubernetes-preempt-controller
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-preempt-controller
  namespace: kube-system
  labels:
    k8s-app: kubernetes-preempt-controller
spec:
  selector:
    matchLabels:
      k8s-app: kubernetes-preempt-controller
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        k8s-app: kubernetes-preempt-controller
    spec:
      containers:
        - name: kubernetes-preempt-controller
          image: feitnomore/kubernetes-preempt-controller:latest
          imagePullPolicy: Always
      serviceAccountName: kubernetes-preempt-controller
      restartPolicy: Always
      
